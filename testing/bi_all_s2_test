#!/bin/bash
#
# fail2ban filter export all test [S2]
#
# Scan fail2ban log for banned IP's
# and pull everything logged.
# 
# Thu Apr  2 09:21:19 PDT 2015
# Written by: Scott DuBois

# fail2ban log file
log=./tarlogs_2/fail2ban.log

# date results to variable
ymd=$(date +%Y-%m-%d)
hm=$(date +%H:%M)
count=0

# verify file exists
if [ -f $log ]; then

  # empty any current files
  rm ./tarlogs_2/*

  # copy to working file
  cp ./tarlogs_2bk/fail2* ./tarlogs_2

  # unzip any gz files
  gunzip ./tarlogs_2/*.gz

else

  echo "No log files available" > ./files/all/ALL-S2.txt

fi

# wrapper to read each line from each file
for file in ./tarlogs_2/*; do

  # read each line from file separately
  while read -r line; do

    bans=$line

    # check for ban info only 
    all=$(echo $bans | grep actions)

     if [ X"$all" != X"" ]; then 

       # extract necessary data
       banIP=$(echo $all | cut --delimiter=' ' --fields=1,6,7)

       if [[ $banIP != *"already" && $banIP != *"Unban"* && $banIP != *"banTime"* ]]; then

         # print date relative lines 
         echo $banIP >> ./files/all/totalS2.txt

         count=$((count+1))

       else

        # do nothing
        :

       fi
  
    fi

  done < $file

done

# sort the file
#sort -n ./files/all/totalS2.txt -o ./files/all/totalx.txt

# create files to work with
echo "All Bans" > ./files/all/ALL-S2.txt 
printf "Report: $ymd --> $hm\n" >> ./files/all/ALL-S2.txt
printf "Total: $count\n" >> ./files/all/ALL-S2.txt
printf "==============================\n" >> ./files/all/ALL-S2.txt
 
# add the sorted info to the report file
#cat ./files/all/totalx.txt >> ./files/all/ALL-S2.txt

# remove working files
#rm ./files/all/totalS2.txt ./files/all/totalx.txt


# End of script
